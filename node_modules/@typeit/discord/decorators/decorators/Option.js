"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Option = void 0;
require("reflect-metadata");
const __1 = require("../..");
const DSlash_1 = require("../classes/DSlash");
function Option(name, typeOrParams, params) {
    return (target, key, index) => {
        const isParams = typeof typeOrParams === "object";
        let finalParams = params || {};
        let type = Reflect.getMetadata("design:paramtypes", target, key)[index];
        if (isParams) {
            finalParams = typeOrParams;
        }
        else if (typeOrParams !== undefined) {
            type = typeOrParams;
        }
        const option = __1.DOption.create(name || key, type, finalParams === null || finalParams === void 0 ? void 0 : finalParams.description, finalParams === null || finalParams === void 0 ? void 0 : finalParams.required, index).decorate(target.constructor, key, target[key], target.constructor, index);
        option.isNode = true;
        __1.MetadataStorage.instance.addModifier(__1.Modifier.create(async (original) => {
            original.options = [
                ...original.options,
                option
            ];
        }, DSlash_1.DSlash).decorate(target.constructor, key, target[key], target.constructor, index));
        __1.MetadataStorage.instance.addOption(option);
    };
}
exports.Option = Option;
//# sourceMappingURL=Option.js.map