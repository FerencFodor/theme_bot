"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Modifier = void 0;
const Decorator_1 = require("./Decorator");
const DecoratorUtils_1 = require("../../logic/utils/DecoratorUtils");
class Modifier extends Decorator_1.Decorator {
    constructor() {
        super();
    }
    static create(toModify, ...modifyTypes) {
        const modifier = new Modifier();
        modifier._toModify = toModify;
        modifier._modifyTypes = modifyTypes;
        return modifier;
    }
    /**
     * Apply the modifier to a list of objects
     * it only applies the modifications to linked objects
     * that are on the targets type of modification
     * @param modifiers The modifier list
     * @param originals The list of objects to modify
     * @returns
     */
    static async applyFromModifierListToList(modifiers, originals) {
        return await Promise.all(modifiers.map(async (modifier) => {
            // Get the list of objects that are linked to the specified modifier
            let linked = DecoratorUtils_1.DecoratorUtils.getLinkedObjects(modifier, originals);
            // Filter the linked objects to match the target types of modification
            linked = linked.filter((l) => modifier._modifyTypes.includes(l.constructor));
            // Apply the modifications
            await Promise.all(linked.map(async (linkedOriginal) => {
                return await modifier.applyModifications(linkedOriginal);
            }));
        }));
    }
    applyModifications(original) {
        return this._toModify(original);
    }
}
exports.Modifier = Modifier;
//# sourceMappingURL=Modifier.js.map